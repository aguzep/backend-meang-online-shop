"Definiciones de los tipos de raíz"
type Query {
    "Lista de usuarios registrados en la Base de Datos (Clientes / Admins)"
    users: ResultUsers
    "Para iniciar sesión de usuario"
    login(email: String, password: String!): ResultLogin
    "Autenticarnos mediante token"
    me: ResultUser
}

type Mutation {
    register(user: UserInput!): ResultUser
}

"Interface para especificar las propiedades obligatorias en la respuesta"
interface Result {
    "Estado de la operación"
    status: Boolean!
    "Mensaje de la operación para dar feedback"
    message: String!
}

type ResultUsers implements Result {
    "Estado de la operación"
    status: Boolean!
    "Mensaje de la operación para dar feedback"
    message: String!
    "Lista de usuarios registrados en la Base de Datos (Clientes / Admins)"
    users: [User!]!
}

type ResultUser implements Result {
    "Estado de la operación"
    status: Boolean!
    "Mensaje de la operación para dar feedback"
    message: String!
    "Información del usuario"
    user: User
}


type ResultLogin implements Result {
    "Estado de la operación"
    status: Boolean!
    "Mensaje de la operación para dar feedback"
    message: String!
    "Información del token de usuario logueado"
    token: String
}

"""
Vamos a especificar la información detallada del usuario.
* Vamos a tener en cuenta:
email = usuario del cliente de la base de datos.
Fecha de nacimiento y registro en formato ISO
"""
type User {
    "Identificado único"
    id: ID! 
    "Nombre de pila"
    name: String!
    "Apellido del usuario"
    lastname: String!
    "Email de registro del usuario"
    email: String!
    "Password asociado a la cuenta"
    password: String!
    "Fecha de registro en la Base de Datos"
    registerDate: String!
    "Fecha de nacimiento - Solo mayores de 18 años"
    birthday: String!
    "Permisos del usuario"
    role: Role!
}

"Input para añadir los datos del usuario en el regitro"
input UserInput {
    "Identificador en este caso no obligatorio"
    id: ID
    "Nombre de pila"
    name: String!
    "Apellido del usuario"
    lastname: String!
    "Email de registro del usuario"
    email: String!
    "Password asociado a la cuenta"
    password: String!
    "Fecha de registro en la Base de Datos"
    birthday: String!
    "Permisos del usuario"
    role: Role=CLIENT
}

enum Role {
    CLIENT
    ADMIN
}